{"version":3,"sources":["user.js"],"names":["chai","use","chaiHttp","should","describe","it","done","request","server","get","end","err","res","have","status","body","be","deep","equal","responseCode","responseMessage","property","to","an","name","model","description","id","defect","post","send"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEAA,eAAKC,GAAL,CAASC,kBAAT;AACAF,eAAKG,MAAL;;AAEAC,SAAS,kBAAT,EAA6B,YAAM;;AAE/B;;;AAGAA,aAAS,uBAAT,EAAkC,YAAM;AACpCC,WAAG,6BAAH,EAAkC,UAACC,IAAD,EAAU;AACxCN,2BAAKO,OAAL,CAAaC,eAAb,EACKC,GADL,CACS,yBADT,EAEKC,GAFL,CAES,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfA,oBAAIT,MAAJ,CAAWU,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAF,oBAAIG,IAAJ,CAASZ,MAAT,CAAgBa,EAAhB,CAAmBC,IAAnB,CAAwBC,KAAxB,CAA8B;AAC1BC,kCAAc,IADY;AAE1BC,qCAAiB;AAFS,iBAA9B;AAIAR,oBAAIG,IAAJ,CAASZ,MAAT,CAAgBU,IAAhB,CAAqBQ,QAArB,CAA8B,MAA9B,EAAsCC,EAAtC,CAAyCN,EAAzC,CAA4CO,EAA5C,CAA+C,OAA/C;AACAjB;AACH,aAVL;AAWH,SAZD;AAaH,KAdD;;AAgBA;;;AAGAF,aAAS,eAAT,EAA0B,YAAM;AAC5BC,WAAG,kEAAH,EAAuE,UAACC,IAAD,EAAU;AAC7E,gBAAIC,UAAU;AACViB,sBAAM,OADI;AAEVC,uBAAO,IAFG;AAGVC,6BAAa,cAHH;AAIVC,oBAAI,GAJM;AAKVC,wBAAQ;AALE,aAAd;AAOA5B,2BAAKO,OAAL,CAAaC,eAAb,EACKqB,IADL,CACU,yBADV,EAEKC,IAFL,CAEUvB,OAFV,EAGKG,GAHL,CAGS,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfA,oBAAIT,MAAJ,CAAWU,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAF,oBAAIG,IAAJ,CAASZ,MAAT,CAAgBa,EAAhB,CAAmBC,IAAnB,CAAwBC,KAAxB,CAA8B;AAC1BC,kCAAc,IADY;AAE1BC,qCAAiB;AAFS,iBAA9B;AAIAd;AACH,aAVL;AAWH,SAnBD;;AAqBAD,WAAG,+DAAH,EAAoE,UAACC,IAAD,EAAU;AAC1E,gBAAIC,UAAU;AACViB,sBAAM,EADI;AAEVC,uBAAO,IAFG;AAGVC,6BAAa,EAHH;AAIVC,oBAAI,GAJM;AAKVC,wBAAQ;AALE,aAAd;AAOA5B,2BAAKO,OAAL,CAAaC,eAAb,EACKqB,IADL,CACU,yBADV,EAEKC,IAFL,CAEUvB,OAFV,EAGKG,GAHL,CAGS,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfA,oBAAIT,MAAJ,CAAWU,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAF,oBAAIG,IAAJ,CAASZ,MAAT,CAAgBa,EAAhB,CAAmBC,IAAnB,CAAwBC,KAAxB,CAA8B;AAC1BC,kCAAc,IADY;AAE1BC,qCAAiB;AAFS,iBAA9B;AAIAd;AACH,aAVL;AAWH,SAnBD;AAqBH,KA3CD;AA4CH,CApED","file":"user.js","sourceRoot":"/home/tomiwatech/Desktop/projects/Andela/bootCamp/Maintenance-Tracker/server/tests/controllers","sourcesContent":["import chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport server from '../../index';\nimport UserController from '../../controllers/userController';\n\nchai.use(chaiHttp);\nchai.should();\n\ndescribe('Users Controller', () => {\n\n    /*\n   * Test the /GET route\n   */\n    describe('Get all user requests', () => {\n        it('it should GET all the users', (done) => {\n            chai.request(server)\n                .get('/api/v1/users/requests/')\n                .end((err, res) => {\n                    res.should.have.status(200);\n                    res.body.should.be.deep.equal({\n                        responseCode: '00',\n                        responseMessage: 'Successfully fetched all users requests'\n                    })\n                    res.body.should.have.property('data').to.be.an('array');\n                    done();\n                });\n        });\n    });\n\n    /*\n    * Test the /POST route\n    */\n    describe('/POST request', () => {\n        it('it should make a post request assuming all fields are not empty ', (done) => {\n            let request = {\n                name: \"final\",\n                model: \"hh\",\n                description: \"Best in town\",\n                id: \"2\",\n                defect: \"Faulty\"\n            }\n            chai.request(server)\n                .post('/api/v1/users/requests/')\n                .send(request)\n                .end((err, res) => {\n                    res.should.have.status(201);\n                    res.body.should.be.deep.equal({\n                        responseCode: '00',\n                        responseMessage: 'New request created successfully'\n                    })\n                    done();\n                });\n        });\n\n        it('it should make a post request assuming some fields are empty ', (done) => {\n            let request = {\n                name: \"\",\n                model: \"hh\",\n                description: \"\",\n                id: \"2\",\n                defect: \"Faulty\"\n            }\n            chai.request(server)\n                .post('/api/v1/users/requests/')\n                .send(request)\n                .end((err, res) => {\n                    res.should.have.status(400);\n                    res.body.should.be.deep.equal({\n                        responseCode: '01',\n                        responseMessage: 'Please fill all fields'\n                    })\n                    done();\n                });\n        });\n\n    });\n});"]}