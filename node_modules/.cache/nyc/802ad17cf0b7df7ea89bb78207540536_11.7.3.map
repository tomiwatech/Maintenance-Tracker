{"version":3,"sources":["userController.js"],"names":["dataStore","dummyData1","name","model","desciption","id","defect","dummyData2","push","UserController","req","res","body","position","UserhelperClass","findUser","status","json","responseCode","responseMessage","params","splice","data","length"],"mappings":"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","file":"userController.js","sourceRoot":"/home/tomiwatech/Desktop/projects/Andela/bootCamp/Maintenance-Tracker/server/controllers","sourcesContent":["import UserhelperClass from '../helpers/users/user';\n\nconst dataStore = [];\nconst dummyData1 = {\n  name: 'Sanni',\n  model: 'hello boy',\n  desciption: 'i am not a nigerian developer',\n  id: 1,\n  defect: 'broken'\n};\n\nconst dummyData2 = {\n  name: 'Sanni Mikolo',\n  model: 'hello boy',\n  desciption: 'i am not a nigerian developer',\n  id: 2,\n  defect: 'broken'\n};\n\ndataStore.push(dummyData1);\ndataStore.push(dummyData2);\nclass UserController {\n  static create(req, res) {\n    const { id } = req.body;\n    const position = UserhelperClass.findUser(dataStore, id);\n    if (position > -1) {\n      return res.status(400).json({\n        responseCode: '01',\n        responseMessage: 'User Already Exists'\n      });\n    }\n    dataStore.push(req.body);\n    return res.status(201).json({\n      responseCode: '00',\n      responseMessage: 'New request created successfully'\n    });\n  }\n\n  static deleteOne(req, res) {\n    const { id } = req.params;\n    const position = UserhelperClass.findUser(dataStore, id);\n    if (position > -1) {\n      dataStore.splice(position, 1);\n      return res.status(200).json({\n        responseCode: '00',\n        responseMessage: 'User Deleted',\n        data: dataStore\n      });\n    }\n    return res.status(400).json({\n      responseCode: '01',\n      responseMessage: 'User Could not be deleted. ID not found'\n    });\n  }\n\n  static findById(req, res) {\n    const { id } = req.params;\n    const position = UserhelperClass.findUser(dataStore, id);\n    if (position > -1) {\n      return res.status(200).json({\n        responseCode: '00',\n        responseMessage: 'User found',\n        data: dataStore[position]\n      });\n    }\n\n    return res.status(400).json({\n      responseCode: '01',\n      responseMessage: 'User not found'\n    });\n  }\n\n  static getAll(req, res) {\n    return res.status(200).json({\n      responseCode: '00',\n      responseMessage: 'Successfully fetched all users requests',\n      data: dataStore\n    });\n  }\n\n  static deleteAll(req, res) {\n    dataStore.length = 0;\n    return res.status(200).json({\n      responseCode: '00',\n      responseMessage: 'Data Source Emptied Successfully',\n      data: dataStore\n    });\n  }\n\n  static updateOne(req, res) {\n    const {\n      name, model, desciption, id, defect\n    } = req.body;\n    const position = UserhelperClass.findUser(dataStore, id);\n    if (position > -1) {\n      dataStore[position].id = id;\n      dataStore[position].name = name;\n      dataStore[position].model = model;\n      dataStore[position].desciption = desciption;\n      dataStore[position].defect = defect;\n      return res.status(200).json({\n        responseCode: '00',\n        responseMessage: 'User details Updated',\n        data: dataStore[position]\n      });\n    }\n    return res.status(400).json({\n      responseCode: '01',\n      responseMessage: 'User with id not found'\n    });\n  }\n}\n\nexport default UserController;\n"]}