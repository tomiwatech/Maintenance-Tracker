'use strict';

var cov_2814qlnx18 = function () {
    var path = '/home/tomiwatech/Desktop/projects/Andela/bootCamp/Maintenance-Tracker/server/controllers/userController.js',
        hash = '35ac5bc8ee191a8dec2b03ed40c7e7f25333a6e1',
        Function = function () {}.constructor,
        global = new Function('return this')(),
        gcv = '__coverage__',
        coverageData = {
        path: '/home/tomiwatech/Desktop/projects/Andela/bootCamp/Maintenance-Tracker/server/controllers/userController.js',
        statementMap: {
            '0': {
                start: {
                    line: 1,
                    column: 16
                },
                end: {
                    line: 1,
                    column: 18
                }
            },
            '1': {
                start: {
                    line: 5,
                    column: 8
                },
                end: {
                    line: 5,
                    column: 29
                }
            },
            '2': {
                start: {
                    line: 6,
                    column: 8
                },
                end: {
                    line: 6,
                    column: 33
                }
            },
            '3': {
                start: {
                    line: 7,
                    column: 8
                },
                end: {
                    line: 10,
                    column: 10
                }
            },
            '4': {
                start: {
                    line: 15,
                    column: 22
                },
                end: {
                    line: 15,
                    column: 33
                }
            },
            '5': {
                start: {
                    line: 16,
                    column: 8
                },
                end: {
                    line: 20,
                    column: 9
                }
            },
            '6': {
                start: {
                    line: 17,
                    column: 12
                },
                end: {
                    line: 17,
                    column: 41
                }
            },
            '7': {
                start: {
                    line: 18,
                    column: 12
                },
                end: {
                    line: 18,
                    column: 27
                }
            },
            '8': {
                start: {
                    line: 19,
                    column: 12
                },
                end: {
                    line: 19,
                    column: 24
                }
            },
            '9': {
                start: {
                    line: 25,
                    column: 17
                },
                end: {
                    line: 25,
                    column: 30
                }
            },
            '10': {
                start: {
                    line: 26,
                    column: 8
                },
                end: {
                    line: 26,
                    column: 32
                }
            },
            '11': {
                start: {
                    line: 27,
                    column: 8
                },
                end: {
                    line: 35,
                    column: 9
                }
            },
            '12': {
                start: {
                    line: 28,
                    column: 12
                },
                end: {
                    line: 34,
                    column: 13
                }
            },
            '13': {
                start: {
                    line: 29,
                    column: 16
                },
                end: {
                    line: 33,
                    column: 18
                }
            },
            '14': {
                start: {
                    line: 37,
                    column: 8
                },
                end: {
                    line: 40,
                    column: 10
                }
            },
            '15': {
                start: {
                    line: 45,
                    column: 8
                },
                end: {
                    line: 45,
                    column: 30
                }
            },
            '16': {
                start: {
                    line: 46,
                    column: 8
                },
                end: {
                    line: 50,
                    column: 11
                }
            },
            '17': {
                start: {
                    line: 55,
                    column: 8
                },
                end: {
                    line: 55,
                    column: 28
                }
            },
            '18': {
                start: {
                    line: 56,
                    column: 8
                },
                end: {
                    line: 60,
                    column: 11
                }
            },
            '19': {
                start: {
                    line: 67,
                    column: 12
                },
                end: {
                    line: 67,
                    column: 37
                }
            },
            '20': {
                start: {
                    line: 68,
                    column: 12
                },
                end: {
                    line: 72,
                    column: 13
                }
            },
            '21': {
                start: {
                    line: 69,
                    column: 16
                },
                end: {
                    line: 71,
                    column: 17
                }
            },
            '22': {
                start: {
                    line: 70,
                    column: 20
                },
                end: {
                    line: 70,
                    column: 29
                }
            },
            '23': {
                start: {
                    line: 74,
                    column: 12
                },
                end: {
                    line: 74,
                    column: 22
                }
            },
            '24': {
                start: {
                    line: 77,
                    column: 56
                },
                end: {
                    line: 77,
                    column: 64
                }
            },
            '25': {
                start: {
                    line: 78,
                    column: 23
                },
                end: {
                    line: 78,
                    column: 31
                }
            },
            '26': {
                start: {
                    line: 79,
                    column: 8
                },
                end: {
                    line: 95,
                    column: 9
                }
            },
            '27': {
                start: {
                    line: 80,
                    column: 12
                },
                end: {
                    line: 94,
                    column: 13
                }
            },
            '28': {
                start: {
                    line: 81,
                    column: 16
                },
                end: {
                    line: 93,
                    column: 17
                }
            },
            '29': {
                start: {
                    line: 82,
                    column: 20
                },
                end: {
                    line: 82,
                    column: 41
                }
            },
            '30': {
                start: {
                    line: 83,
                    column: 20
                },
                end: {
                    line: 83,
                    column: 45
                }
            },
            '31': {
                start: {
                    line: 84,
                    column: 20
                },
                end: {
                    line: 84,
                    column: 47
                }
            },
            '32': {
                start: {
                    line: 85,
                    column: 20
                },
                end: {
                    line: 85,
                    column: 57
                }
            },
            '33': {
                start: {
                    line: 86,
                    column: 20
                },
                end: {
                    line: 86,
                    column: 49
                }
            },
            '34': {
                start: {
                    line: 88,
                    column: 20
                },
                end: {
                    line: 92,
                    column: 22
                }
            },
            '35': {
                start: {
                    line: 97,
                    column: 8
                },
                end: {
                    line: 100,
                    column: 10
                }
            },
            '36': {
                start: {
                    line: 105,
                    column: 8
                },
                end: {
                    line: 105,
                    column: 25
                }
            },
            '37': {
                start: {
                    line: 110,
                    column: 23
                },
                end: {
                    line: 110,
                    column: 38
                }
            }
        },
        fnMap: {
            '0': {
                name: '(anonymous_0)',
                decl: {
                    start: {
                        line: 4,
                        column: 4
                    },
                    end: {
                        line: 4,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 4,
                        column: 27
                    },
                    end: {
                        line: 11,
                        column: 5
                    }
                },
                line: 4
            },
            '1': {
                name: '(anonymous_1)',
                decl: {
                    start: {
                        line: 14,
                        column: 4
                    },
                    end: {
                        line: 14,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 14,
                        column: 30
                    },
                    end: {
                        line: 22,
                        column: 5
                    }
                },
                line: 14
            },
            '2': {
                name: '(anonymous_2)',
                decl: {
                    start: {
                        line: 24,
                        column: 4
                    },
                    end: {
                        line: 24,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 24,
                        column: 29
                    },
                    end: {
                        line: 41,
                        column: 5
                    }
                },
                line: 24
            },
            '3': {
                name: '(anonymous_3)',
                decl: {
                    start: {
                        line: 44,
                        column: 4
                    },
                    end: {
                        line: 44,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 44,
                        column: 27
                    },
                    end: {
                        line: 51,
                        column: 5
                    }
                },
                line: 44
            },
            '4': {
                name: '(anonymous_4)',
                decl: {
                    start: {
                        line: 54,
                        column: 4
                    },
                    end: {
                        line: 54,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 54,
                        column: 30
                    },
                    end: {
                        line: 61,
                        column: 5
                    }
                },
                line: 54
            },
            '5': {
                name: '(anonymous_5)',
                decl: {
                    start: {
                        line: 64,
                        column: 4
                    },
                    end: {
                        line: 64,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 64,
                        column: 30
                    },
                    end: {
                        line: 102,
                        column: 5
                    }
                },
                line: 64
            },
            '6': {
                name: 'find',
                decl: {
                    start: {
                        line: 66,
                        column: 17
                    },
                    end: {
                        line: 66,
                        column: 21
                    }
                },
                loc: {
                    start: {
                        line: 66,
                        column: 26
                    },
                    end: {
                        line: 75,
                        column: 9
                    }
                },
                line: 66
            },
            '7': {
                name: '(anonymous_7)',
                decl: {
                    start: {
                        line: 104,
                        column: 4
                    },
                    end: {
                        line: 104,
                        column: 5
                    }
                },
                loc: {
                    start: {
                        line: 104,
                        column: 36
                    },
                    end: {
                        line: 106,
                        column: 5
                    }
                },
                line: 104
            }
        },
        branchMap: {
            '0': {
                loc: {
                    start: {
                        line: 16,
                        column: 8
                    },
                    end: {
                        line: 20,
                        column: 9
                    }
                },
                type: 'if',
                locations: [{
                    start: {
                        line: 16,
                        column: 8
                    },
                    end: {
                        line: 20,
                        column: 9
                    }
                }, {
                    start: {
                        line: 16,
                        column: 8
                    },
                    end: {
                        line: 20,
                        column: 9
                    }
                }],
                line: 16
            },
            '1': {
                loc: {
                    start: {
                        line: 28,
                        column: 12
                    },
                    end: {
                        line: 34,
                        column: 13
                    }
                },
                type: 'if',
                locations: [{
                    start: {
                        line: 28,
                        column: 12
                    },
                    end: {
                        line: 34,
                        column: 13
                    }
                }, {
                    start: {
                        line: 28,
                        column: 12
                    },
                    end: {
                        line: 34,
                        column: 13
                    }
                }],
                line: 28
            },
            '2': {
                loc: {
                    start: {
                        line: 69,
                        column: 16
                    },
                    end: {
                        line: 71,
                        column: 17
                    }
                },
                type: 'if',
                locations: [{
                    start: {
                        line: 69,
                        column: 16
                    },
                    end: {
                        line: 71,
                        column: 17
                    }
                }, {
                    start: {
                        line: 69,
                        column: 16
                    },
                    end: {
                        line: 71,
                        column: 17
                    }
                }],
                line: 69
            },
            '3': {
                loc: {
                    start: {
                        line: 79,
                        column: 8
                    },
                    end: {
                        line: 95,
                        column: 9
                    }
                },
                type: 'if',
                locations: [{
                    start: {
                        line: 79,
                        column: 8
                    },
                    end: {
                        line: 95,
                        column: 9
                    }
                }, {
                    start: {
                        line: 79,
                        column: 8
                    },
                    end: {
                        line: 95,
                        column: 9
                    }
                }],
                line: 79
            },
            '4': {
                loc: {
                    start: {
                        line: 81,
                        column: 16
                    },
                    end: {
                        line: 93,
                        column: 17
                    }
                },
                type: 'if',
                locations: [{
                    start: {
                        line: 81,
                        column: 16
                    },
                    end: {
                        line: 93,
                        column: 17
                    }
                }, {
                    start: {
                        line: 81,
                        column: 16
                    },
                    end: {
                        line: 93,
                        column: 17
                    }
                }],
                line: 81
            }
        },
        s: {
            '0': 0,
            '1': 0,
            '2': 0,
            '3': 0,
            '4': 0,
            '5': 0,
            '6': 0,
            '7': 0,
            '8': 0,
            '9': 0,
            '10': 0,
            '11': 0,
            '12': 0,
            '13': 0,
            '14': 0,
            '15': 0,
            '16': 0,
            '17': 0,
            '18': 0,
            '19': 0,
            '20': 0,
            '21': 0,
            '22': 0,
            '23': 0,
            '24': 0,
            '25': 0,
            '26': 0,
            '27': 0,
            '28': 0,
            '29': 0,
            '30': 0,
            '31': 0,
            '32': 0,
            '33': 0,
            '34': 0,
            '35': 0,
            '36': 0,
            '37': 0
        },
        f: {
            '0': 0,
            '1': 0,
            '2': 0,
            '3': 0,
            '4': 0,
            '5': 0,
            '6': 0,
            '7': 0
        },
        b: {
            '0': [0, 0],
            '1': [0, 0],
            '2': [0, 0],
            '3': [0, 0],
            '4': [0, 0]
        },
        _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
    },
        coverage = global[gcv] || (global[gcv] = {});

    if (coverage[path] && coverage[path].hash === hash) {
        return coverage[path];
    }

    coverageData.hash = hash;
    return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var dataStore = (cov_2814qlnx18.s[0]++, []);

var userClass = function () {
    function userClass() {
        _classCallCheck(this, userClass);
    }

    _createClass(userClass, [{
        key: 'create',
        value: function create(req, res, next) {
            cov_2814qlnx18.f[0]++;
            cov_2814qlnx18.s[1]++;

            console.log(req.body);
            cov_2814qlnx18.s[2]++;
            dataStore.push(req.body);
            cov_2814qlnx18.s[3]++;
            return res.status(201).json({
                'statusCode': '00',
                'statusMessage': 'New request created successfully'
            });
        }
    }, {
        key: 'deleteOne',
        value: function deleteOne(req, res, next) {
            cov_2814qlnx18.f[1]++;

            var foundAt = (cov_2814qlnx18.s[4]++, this.find());
            cov_2814qlnx18.s[5]++;
            if (foundAt > -1) {
                cov_2814qlnx18.b[0][0]++;
                cov_2814qlnx18.s[6]++;

                dataStore.splice(foundAt, 1);
                cov_2814qlnx18.s[7]++;
                dataStore.pop();
                cov_2814qlnx18.s[8]++;
                return true;
            } else {
                cov_2814qlnx18.b[0][1]++;
            }
        }
    }, {
        key: 'findById',
        value: function findById(req, res, next) {
            cov_2814qlnx18.f[2]++;

            var id = (cov_2814qlnx18.s[9]++, req.params.id);
            cov_2814qlnx18.s[10]++;
            console.log("id " + id);
            cov_2814qlnx18.s[11]++;
            for (var i = 0; i < dataStore.length; ++i) {
                cov_2814qlnx18.s[12]++;

                if (dataStore[i].id == id) {
                    cov_2814qlnx18.b[1][0]++;
                    cov_2814qlnx18.s[13]++;

                    return res.status(200).json({
                        'statusCode': '00',
                        'statusMessage': 'User found',
                        'data': dataStore[i]
                    });
                } else {
                    cov_2814qlnx18.b[1][1]++;
                }
            }

            cov_2814qlnx18.s[14]++;
            return res.status(404).json({
                'statusCode': '04',
                'statusMessage': 'User not found'
            });
        }
    }, {
        key: 'getAll',
        value: function getAll(req, res, next) {
            cov_2814qlnx18.f[3]++;
            cov_2814qlnx18.s[15]++;

            console.log(dataStore);
            cov_2814qlnx18.s[16]++;
            return res.status(200).json({
                'statusCode': '00',
                'statusMessage': 'Successfully fetched all users requests',
                'data': dataStore
            });
        }
    }, {
        key: 'deleteAll',
        value: function deleteAll(req, res, next) {
            cov_2814qlnx18.f[4]++;
            cov_2814qlnx18.s[17]++;

            dataStore.length = 0;
            cov_2814qlnx18.s[18]++;
            return res.status(200).json({
                'statusCode': '00',
                'statusMessage': 'Data Source Emptied Successfully',
                'data': dataStore
            });
        }
    }, {
        key: 'updateOne',
        value: function updateOne(req, res, next) {
            cov_2814qlnx18.f[5]++;


            function find(id) {
                cov_2814qlnx18.f[6]++;
                cov_2814qlnx18.s[19]++;

                console.log('cLalled me');
                cov_2814qlnx18.s[20]++;
                for (var i = 0; i < dataStore.length; ++i) {
                    cov_2814qlnx18.s[21]++;

                    if (dataStore[i].id == id) {
                        cov_2814qlnx18.b[2][0]++;
                        cov_2814qlnx18.s[22]++;

                        return i;
                    } else {
                        cov_2814qlnx18.b[2][1]++;
                    }
                }

                cov_2814qlnx18.s[23]++;
                return -1;
            }

            var _ref = (cov_2814qlnx18.s[24]++, req.body),
                id = _ref.id,
                name = _ref.name,
                model = _ref.model,
                desciption = _ref.desciption,
                defect = _ref.defect;

            var foundOne = (cov_2814qlnx18.s[25]++, find(id));
            cov_2814qlnx18.s[26]++;
            if (foundOne > -1) {
                cov_2814qlnx18.b[3][0]++;
                cov_2814qlnx18.s[27]++;

                for (var i = 0; i < dataStore.length; ++i) {
                    cov_2814qlnx18.s[28]++;

                    if (dataStore[i].id == id) {
                        cov_2814qlnx18.b[4][0]++;
                        cov_2814qlnx18.s[29]++;

                        dataStore[i].id = id;
                        cov_2814qlnx18.s[30]++;
                        dataStore[i].name = name;
                        cov_2814qlnx18.s[31]++;
                        dataStore[i].model = model;
                        cov_2814qlnx18.s[32]++;
                        dataStore[i].desciption = desciption;
                        cov_2814qlnx18.s[33]++;
                        dataStore[i].defect = defect;

                        cov_2814qlnx18.s[34]++;
                        return res.status(200).json({
                            'statusCode': '00',
                            'statusMessage': 'Updated',
                            'data': dataStore[i]
                        });
                    } else {
                        cov_2814qlnx18.b[4][1]++;
                    }
                }
            } else {
                cov_2814qlnx18.b[3][1]++;
            }

            cov_2814qlnx18.s[35]++;
            return res.status(400).json({
                'statusCode': '00',
                'statusMessage': 'User with id not found'
            });
        }
    }], [{
        key: 'toString',
        value: function toString(req, res, next) {
            cov_2814qlnx18.f[7]++;
            cov_2814qlnx18.s[36]++;

            return dataStore;
        }
    }]);

    return userClass;
}();

var userController = (cov_2814qlnx18.s[37]++, new userClass());

exports.default = userController;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJDb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbImRhdGFTdG9yZSIsInVzZXJDbGFzcyIsInJlcSIsInJlcyIsIm5leHQiLCJjb25zb2xlIiwibG9nIiwiYm9keSIsInB1c2giLCJzdGF0dXMiLCJqc29uIiwiZm91bmRBdCIsImZpbmQiLCJzcGxpY2UiLCJwb3AiLCJpZCIsInBhcmFtcyIsImkiLCJsZW5ndGgiLCJuYW1lIiwibW9kZWwiLCJkZXNjaXB0aW9uIiwiZGVmZWN0IiwiZm91bmRPbmUiLCJ1c2VyQ29udHJvbGxlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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dkIsK0JBQU9uQixJQUFJTSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDeEIsMENBQWMsSUFEVTtBQUV4Qiw2Q0FBaUIsU0FGTztBQUd4QixvQ0FBUVYsVUFBVWlCLENBQVY7QUFIZ0IseUJBQXJCLENBQVA7QUFLSCxxQkFaRDtBQUFBO0FBQUE7QUFhSDtBQUNKLGFBaEJEO0FBQUE7QUFBQTs7QUFmc0I7QUFpQ3RCLG1CQUFPZCxJQUFJTSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDeEIsOEJBQWMsSUFEVTtBQUV4QixpQ0FBaUI7QUFGTyxhQUFyQixDQUFQO0FBS0g7OztpQ0FFZVIsRyxFQUFLQyxHLEVBQUtDLEksRUFBTTtBQUFBO0FBQUE7O0FBQzVCLG1CQUFPSixTQUFQO0FBQ0g7Ozs7OztBQUlMLElBQU13QiwwQ0FBaUIsSUFBSXZCLFNBQUosRUFBakIsQ0FBTjs7a0JBRWV1QixjIiwiZmlsZSI6InVzZXJDb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RvbWl3YXRlY2gvRGVza3RvcC9wcm9qZWN0cy9BbmRlbGEvYm9vdENhbXAvTWFpbnRlbmFuY2UtVHJhY2tlci9zZXJ2ZXIvY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgZGF0YVN0b3JlID0gW107XG5jbGFzcyB1c2VyQ2xhc3Mge1xuXG4gICAgY3JlYXRlKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgICAgIGNvbnNvbGUubG9nKHJlcS5ib2R5KVxuICAgICAgICBkYXRhU3RvcmUucHVzaChyZXEuYm9keSk7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMSkuanNvbih7XG4gICAgICAgICAgICAnc3RhdHVzQ29kZSc6ICcwMCcsXG4gICAgICAgICAgICAnc3RhdHVzTWVzc2FnZSc6ICdOZXcgcmVxdWVzdCBjcmVhdGVkIHN1Y2Nlc3NmdWxseSdcbiAgICAgICAgfSlcbiAgICB9XG5cblxuICAgIGRlbGV0ZU9uZShyZXEsIHJlcywgbmV4dCkge1xuICAgICAgICBsZXQgZm91bmRBdCA9IHRoaXMuZmluZCgpO1xuICAgICAgICBpZiAoZm91bmRBdCA+IC0xKSB7XG4gICAgICAgICAgICBkYXRhU3RvcmUuc3BsaWNlKGZvdW5kQXQsIDEpO1xuICAgICAgICAgICAgZGF0YVN0b3JlLnBvcCgpXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgfVxuXG4gICAgZmluZEJ5SWQocmVxLCByZXMsIG5leHQpIHtcbiAgICAgICAgbGV0IGlkID0gcmVxLnBhcmFtcy5pZDtcbiAgICAgICAgY29uc29sZS5sb2coXCJpZCBcIiArIGlkKTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkYXRhU3RvcmUubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgIGlmIChkYXRhU3RvcmVbaV0uaWQgPT0gaWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgICAgICAgICAgICAgICAgICAnc3RhdHVzQ29kZSc6ICcwMCcsXG4gICAgICAgICAgICAgICAgICAgICdzdGF0dXNNZXNzYWdlJzogJ1VzZXIgZm91bmQnLFxuICAgICAgICAgICAgICAgICAgICAnZGF0YSc6IGRhdGFTdG9yZVtpXVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDQpLmpzb24oe1xuICAgICAgICAgICAgJ3N0YXR1c0NvZGUnOiAnMDQnLFxuICAgICAgICAgICAgJ3N0YXR1c01lc3NhZ2UnOiAnVXNlciBub3QgZm91bmQnXG4gICAgICAgIH0pXG4gICAgfVxuXG5cbiAgICBnZXRBbGwocmVxLCByZXMsIG5leHQpIHtcbiAgICAgICAgY29uc29sZS5sb2coZGF0YVN0b3JlKVxuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgICAgICAgICAgJ3N0YXR1c0NvZGUnOiAnMDAnLFxuICAgICAgICAgICAgJ3N0YXR1c01lc3NhZ2UnOiAnU3VjY2Vzc2Z1bGx5IGZldGNoZWQgYWxsIHVzZXJzIHJlcXVlc3RzJyxcbiAgICAgICAgICAgICdkYXRhJzogZGF0YVN0b3JlXG4gICAgICAgIH0pO1xuICAgIH1cblxuXG4gICAgZGVsZXRlQWxsKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgICAgIGRhdGFTdG9yZS5sZW5ndGggPSAwXG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7XG4gICAgICAgICAgICAnc3RhdHVzQ29kZSc6ICcwMCcsXG4gICAgICAgICAgICAnc3RhdHVzTWVzc2FnZSc6ICdEYXRhIFNvdXJjZSBFbXB0aWVkIFN1Y2Nlc3NmdWxseScsXG4gICAgICAgICAgICAnZGF0YSc6IGRhdGFTdG9yZVxuICAgICAgICB9KTtcbiAgICB9XG5cblxuICAgIHVwZGF0ZU9uZShyZXEsIHJlcywgbmV4dCkge1xuXG4gICAgICAgIGZ1bmN0aW9uIGZpbmQoaWQpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdjTGFsbGVkIG1lJylcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZGF0YVN0b3JlLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICAgICAgaWYgKGRhdGFTdG9yZVtpXS5pZCA9PSBpZCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiAtMTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHsgaWQsIG5hbWUsIG1vZGVsLCBkZXNjaXB0aW9uLCBkZWZlY3QgfSA9IHJlcS5ib2R5O1xuICAgICAgICBsZXQgZm91bmRPbmUgPSBmaW5kKGlkKTtcbiAgICAgICAgaWYgKGZvdW5kT25lID4gLTEpIHtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZGF0YVN0b3JlLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICAgICAgaWYgKGRhdGFTdG9yZVtpXS5pZCA9PSBpZCkge1xuICAgICAgICAgICAgICAgICAgICBkYXRhU3RvcmVbaV0uaWQgPSBpZDtcbiAgICAgICAgICAgICAgICAgICAgZGF0YVN0b3JlW2ldLm5hbWUgPSBuYW1lO1xuICAgICAgICAgICAgICAgICAgICBkYXRhU3RvcmVbaV0ubW9kZWwgPSBtb2RlbDtcbiAgICAgICAgICAgICAgICAgICAgZGF0YVN0b3JlW2ldLmRlc2NpcHRpb24gPSBkZXNjaXB0aW9uO1xuICAgICAgICAgICAgICAgICAgICBkYXRhU3RvcmVbaV0uZGVmZWN0ID0gZGVmZWN0O1xuXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7XG4gICAgICAgICAgICAgICAgICAgICAgICAnc3RhdHVzQ29kZSc6ICcwMCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAnc3RhdHVzTWVzc2FnZSc6ICdVcGRhdGVkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICdkYXRhJzogZGF0YVN0b3JlW2ldXG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgICAgICdzdGF0dXNDb2RlJzogJzAwJyxcbiAgICAgICAgICAgICdzdGF0dXNNZXNzYWdlJzogJ1VzZXIgd2l0aCBpZCBub3QgZm91bmQnXG4gICAgICAgIH0pXG5cbiAgICB9XG5cbiAgICBzdGF0aWMgdG9TdHJpbmcocmVxLCByZXMsIG5leHQpIHtcbiAgICAgICAgcmV0dXJuIGRhdGFTdG9yZTtcbiAgICB9XG5cbn1cblxuY29uc3QgdXNlckNvbnRyb2xsZXIgPSBuZXcgdXNlckNsYXNzKCk7XG5cbmV4cG9ydCBkZWZhdWx0IHVzZXJDb250cm9sbGVyOyJdfQ==