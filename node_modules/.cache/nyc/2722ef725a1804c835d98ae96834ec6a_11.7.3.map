{"version":3,"sources":["users.js"],"names":["validateController","req","res","next","console","log","body","exists","errors","isEmpty","status","json","mapped","user","statusCode"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;;;IAKMA,kB;;;;;;;;;AAGF;;;;;;;;;6BASgBC,G,EAAKC,G,EAAKC,I,EAAM;AAAA;AAAA;;AAC5BC,cAAQC,GAAR,CAAYJ,IAAIK,IAAhB;AAD4B;AAE5B,wBAAM,MAAN,EAAcC,MAAd,IACA,kBAAM,OAAN,EAAeA,MAAf,EADA,EAEA,kBAAM,aAAN,EAAqBA,MAArB,EAFA,EAGA,kBAAM,QAAN,EAAgBA,MAAhB,EAHA;;AAKA,UAAMC,iCAAS,6BAAiBP,GAAjB,CAAT,CAAN;AAP4B;AAQ5B,UAAI,CAACO,OAAOC,OAAP,EAAL,EAAuB;AAAA;AAAA;;AACrB,eAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEH,QAAQA,OAAOI,MAAP,EAAV,EAArB,CAAP;AACD,OAFD;AAAA;AAAA;;AAIA;AACA,UAAMC,+BAAO,sBAAYZ,GAAZ,CAAP,CAAN;AAb4B;AAc5B,aAAOC,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBD,gBAAO,SADiB;AAExBI,oBAAY;AAFY,OAArB,CAAP;AAKH;;;;;;kBAGUd,kB","file":"users.js","sourceRoot":"/home/tomiwatech/Desktop/projects/Andela/bootCamp/Maintenance-Tracker/server/middlewares/validators","sourcesContent":["import { check, validationResult } from 'express-validator/check';\nimport matchedData from 'express-validator/filter';\n\n\n\n\nclass validateController {\n\n\n    /**\n     * Update an existing meal\n     *\n     * @staticmethod\n     * @param  {object} req - Request object\n     * @param {object} res - Response object\n     * @param {function} next - middleware next (for error handling)\n     * @return {json} res.json\n     */\n    static validate(req, res, next) {\n        console.log(req.body)\n        check('name').exists(),\n        check('model').exists(),\n        check('description').exists(),\n        check('defect').exists()\n\n        const errors = validationResult(req);\n        if (!errors.isEmpty()) {\n          return res.status(422).json({ errors: errors.mapped() });\n        }\n       \n        // matchedData returns only the subset of data validated by the middleware\n        const user = matchedData(req);\n        return res.status(201).json({\n            status:'welcome',\n            statusCode: '00'\n        })\n       \n    }\n}\n\nexport default validateController;\n\n"]}