{"version":3,"sources":["userController.js"],"names":["dataStore","UserController","req","res","body","id","position","UserhelperClass","findUser","status","json","responseCode","responseMessage","push","params","splice","data","length","name","model","desciption","defect"],"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","file":"userController.js","sourceRoot":"/home/tomiwatech/Desktop/projects/Andela/bootCamp/Maintenance-Tracker/server/controllers","sourcesContent":["import UserhelperClass from '../helpers/users/user';\n\nconst dataStore = [];\nclass UserController {\n  static create(req, res) {\n    const { id } = req.body;\n    const position = UserhelperClass.findUser(dataStore, id);\n    if (position > -1) {\n      return res.status(400).json({\n        responseCode: '01',\n        responseMessage: 'User Already Exists'\n      });\n    }\n    dataStore.push(req.body);\n    return res.status(201).json({\n      responseCode: '00',\n      responseMessage: 'New request created successfully'\n    });\n  }\n\n  static deleteOne(req, res) {\n    const { id } = req.params;\n    const position = UserhelperClass.findUser(dataStore, id);\n    if (position > -1) {\n      dataStore.splice(position, 1);\n      return res.status(200).json({\n        responseCode: '00',\n        responseMessage: 'User Deleted',\n        data: dataStore\n      });\n    }\n    return res.status(400).json({\n      responseCode: '01',\n      responseMessage: 'User Could not be deleted. ID not found'\n    });\n  }\n\n  static findById(req, res) {\n    const { id } = req.params;\n    const position = UserhelperClass.findUser(dataStore, id);\n    if (position > -1) {\n      return res.status(200).json({\n        responseCode: '00',\n        responseMessage: 'User found',\n        data: dataStore[position]\n      });\n    }\n\n    return res.status(400).json({\n      responseCode: '01',\n      responseMessage: 'User not found'\n    });\n  }\n\n  static getAll(req, res) {\n    return res.status(200).json({\n      responseCode: '00',\n      responseMessage: 'Successfully fetched all users requests',\n      data: dataStore\n    });\n  }\n\n  static deleteAll(req, res) {\n    dataStore.length = 0;\n    return res.status(200).json({\n      responseCode: '00',\n      responseMessage: 'Data Source Emptied Successfully',\n      data: dataStore\n    });\n  }\n\n  static updateOne(req, res) {\n    const {\n      name, model, desciption, id, defect\n    } = req.body;\n    const position = UserhelperClass.findUser(dataStore, id);\n    if (position > -1) {\n      dataStore[position].id = id;\n      dataStore[position].name = name;\n      dataStore[position].model = model;\n      dataStore[position].desciption = desciption;\n      dataStore[position].defect = defect;\n      return res.status(200).json({\n        responseCode: '00',\n        responseMessage: 'User details Updated',\n        data: dataStore[position]\n      });\n    }\n    return res.status(400).json({\n      responseCode: '01',\n      responseMessage: 'User with id not found'\n    });\n  }\n}\n\nexport default UserController;\n"]}