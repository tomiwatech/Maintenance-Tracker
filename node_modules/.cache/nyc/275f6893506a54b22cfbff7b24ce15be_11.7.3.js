'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * @exports
 * @class userMiddlewareValidator
 */
var UserMiddlewareValidator = function () {
  function UserMiddlewareValidator() {
    _classCallCheck(this, UserMiddlewareValidator);
  }

  _createClass(UserMiddlewareValidator, null, [{
    key: 'validatePostBody',

    /**
     * UserMiddlewareValidator
     *
     * @staticmethod
     * @param  {object} req - Request object
     * @param {object} res - Response object
     * @param {function} next - middleware next (for error handling)
     * @return {json} res.json
     */
    value: function validatePostBody(req, res, next) {
      var _req$body = req.body,
          name = _req$body.name,
          model = _req$body.model,
          description = _req$body.description,
          id = _req$body.id,
          defect = _req$body.defect;

      if (name.trim() === '' || model.trim() === '' || description.trim() === '' || id.trim() === '' || defect.trim() === '') {
        return res.status(400).json({
          responseCode: '01',
          responseMessage: 'Please fill all fields'
        });
      }
      next();
    }
  }]);

  return UserMiddlewareValidator;
}();

exports.default = UserMiddlewareValidator;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbIlVzZXJNaWRkbGV3YXJlVmFsaWRhdG9yIiwicmVxIiwicmVzIiwibmV4dCIsImJvZHkiLCJuYW1lIiwibW9kZWwiLCJkZXNjcmlwdGlvbiIsImlkIiwiZGVmZWN0IiwidHJpbSIsInN0YXR1cyIsImpzb24iLCJyZXNwb25zZUNvZGUiLCJyZXNwb25zZU1lc3NhZ2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTs7OztJQUlNQSx1Qjs7Ozs7Ozs7QUFDSjs7Ozs7Ozs7O3FDQVN3QkMsRyxFQUFLQyxHLEVBQUtDLEksRUFBTTtBQUFBLHNCQUdsQ0YsSUFBSUcsSUFIOEI7QUFBQSxVQUVwQ0MsSUFGb0MsYUFFcENBLElBRm9DO0FBQUEsVUFFOUJDLEtBRjhCLGFBRTlCQSxLQUY4QjtBQUFBLFVBRXZCQyxXQUZ1QixhQUV2QkEsV0FGdUI7QUFBQSxVQUVWQyxFQUZVLGFBRVZBLEVBRlU7QUFBQSxVQUVOQyxNQUZNLGFBRU5BLE1BRk07O0FBSXRDLFVBQUlKLEtBQUtLLElBQUwsT0FBZ0IsRUFBaEIsSUFBc0JKLE1BQU1JLElBQU4sT0FBaUIsRUFBdkMsSUFBNkNILFlBQVlHLElBQVosT0FBdUIsRUFBcEUsSUFBMEVGLEdBQUdFLElBQUgsT0FBYyxFQUF4RixJQUE4RkQsT0FBT0MsSUFBUCxPQUFrQixFQUFwSCxFQUF3SDtBQUN0SCxlQUFPUixJQUFJUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDMUJDLHdCQUFjLElBRFk7QUFFMUJDLDJCQUFpQjtBQUZTLFNBQXJCLENBQVA7QUFJRDtBQUNEWDtBQUNEOzs7Ozs7a0JBR1lILHVCIiwiZmlsZSI6InVzZXJzLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RvbWl3YXRlY2gvRGVza3RvcC9wcm9qZWN0cy9BbmRlbGEvYm9vdENhbXAvTWFpbnRlbmFuY2UtVHJhY2tlci9zZXJ2ZXIvbWlkZGxld2FyZXMvdmFsaWRhdG9ycyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGV4cG9ydHNcbiAqIEBjbGFzcyB1c2VyTWlkZGxld2FyZVZhbGlkYXRvclxuICovXG5jbGFzcyBVc2VyTWlkZGxld2FyZVZhbGlkYXRvciB7XG4gIC8qKlxuICAgKiBVc2VyTWlkZGxld2FyZVZhbGlkYXRvclxuICAgKlxuICAgKiBAc3RhdGljbWV0aG9kXG4gICAqIEBwYXJhbSAge29iamVjdH0gcmVxIC0gUmVxdWVzdCBvYmplY3RcbiAgICogQHBhcmFtIHtvYmplY3R9IHJlcyAtIFJlc3BvbnNlIG9iamVjdFxuICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBuZXh0IC0gbWlkZGxld2FyZSBuZXh0IChmb3IgZXJyb3IgaGFuZGxpbmcpXG4gICAqIEByZXR1cm4ge2pzb259IHJlcy5qc29uXG4gICAqL1xuICBzdGF0aWMgdmFsaWRhdGVQb3N0Qm9keShyZXEsIHJlcywgbmV4dCkge1xuICAgIGNvbnN0IHtcbiAgICAgIG5hbWUsIG1vZGVsLCBkZXNjcmlwdGlvbiwgaWQsIGRlZmVjdFxuICAgIH0gPSByZXEuYm9keTtcbiAgICBpZiAobmFtZS50cmltKCkgPT09ICcnIHx8IG1vZGVsLnRyaW0oKSA9PT0gJycgfHwgZGVzY3JpcHRpb24udHJpbSgpID09PSAnJyB8fCBpZC50cmltKCkgPT09ICcnIHx8IGRlZmVjdC50cmltKCkgPT09ICcnKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oe1xuICAgICAgICByZXNwb25zZUNvZGU6ICcwMScsXG4gICAgICAgIHJlc3BvbnNlTWVzc2FnZTogJ1BsZWFzZSBmaWxsIGFsbCBmaWVsZHMnXG4gICAgICB9KTtcbiAgICB9XG4gICAgbmV4dCgpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFVzZXJNaWRkbGV3YXJlVmFsaWRhdG9yO1xuIl19