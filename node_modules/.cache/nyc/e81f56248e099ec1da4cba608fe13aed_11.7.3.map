{"version":3,"sources":["userController.js"],"names":["dataStore","UserController","req","res","push","body","status","json","statusCode","statusMessage","find","id","i","length","params","foundAt","splice","data","responseCode","responseMessage","Number","name","model","desciption","defect","foundOne"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,oCAAY,EAAZ,CAAN;;IACMC,c;;;;;;;2BACUC,G,EAAKC,G,EAAK;AAAA;AAAA;;AACtBH,gBAAUI,IAAV,CAAeF,IAAIG,IAAnB;AADsB;AAEtB,aAAOF,IAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,oBAAY,IADc;AAE1BC,uBAAe;AAFW,OAArB,CAAP;AAID;;;8BAEgBP,G,EAAKC,G,EAAK;AAAA;;AACzB,eAASO,IAAT,CAAcC,EAAd,EAAkB;AAAA;AAAA;;AAChB,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIZ,UAAUa,MAA9B,EAAsCD,KAAK,CAA3C,EAA8C;AAAA;;AAC5C,cAAIZ,UAAUY,CAAV,EAAaD,EAAb,KAAoBA,EAAxB,EAA4B;AAAA;AAAA;;AAC1B,mBAAOC,CAAP;AACD,WAFD;AAAA;AAAA;AAGD;AALe;AAMhB,eAAO,CAAC,CAAR;AACD;;AARwB,yCASVV,IAAIY,MATM;AAAA,UASjBH,EATiB,QASjBA,EATiB;;AAUzB,UAAMI,kCAAUL,KAAKC,EAAL,CAAV,CAAN;AAVyB;AAWzB,UAAII,UAAU,CAAC,CAAf,EAAkB;AAAA;AAAA;;AAChBf,kBAAUgB,MAAV,CAAiBD,OAAjB,EAA0B,CAA1B;AADgB;AAEhB,eAAOZ,IAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,sBAAY,IADc;AAE1BC,yBAAe,cAFW;AAG1BQ,gBAAMjB;AAHoB,SAArB,CAAP;AAKD,OAPD;AAAA;AAAA;AAXyB;AAmBzB,aAAOG,IAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BW,sBAAc,IADY;AAE1BC,yBAAiB;AAFS,OAArB,CAAP;AAID;;;6BAEejB,G,EAAKC,G,EAAK;AAAA;;AAAA,2CACTD,IAAIY,MADK;AAAA,UAChBH,EADgB,SAChBA,EADgB;;AAAA;;AAExB,WAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIZ,UAAUa,MAA9B,EAAsCD,KAAK,CAA3C,EAA8C;AAAA;;AAC5C,YAAIZ,UAAUY,CAAV,EAAaD,EAAb,KAAoBS,OAAOT,EAAP,CAAxB,EAAoC;AAAA;AAAA;;AAClC,iBAAOR,IAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,wBAAY,IADc;AAE1BC,2BAAe,YAFW;AAG1BQ,kBAAMjB,UAAUY,CAAV;AAHoB,WAArB,CAAP;AAKD,SAND;AAAA;AAAA;AAOD;;AAVuB;AAYxB,aAAOT,IAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BW,sBAAc,IADY;AAE1BC,yBAAiB;AAFS,OAArB,CAAP;AAID;;;2BAEajB,G,EAAKC,G,EAAK;AAAA;AAAA;;AACtB,aAAOA,IAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,oBAAY,IADc;AAE1BC,uBAAe,yCAFW;AAG1BQ,cAAMjB;AAHoB,OAArB,CAAP;AAKD;;;8BAEgBE,G,EAAKC,G,EAAK;AAAA;AAAA;;AACzBH,gBAAUa,MAAV,GAAmB,CAAnB;AADyB;AAEzB,aAAOV,IAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,oBAAY,IADc;AAE1BC,uBAAe,kCAFW;AAG1BQ,cAAMjB;AAHoB,OAArB,CAAP;AAKD;;;8BAEgBE,G,EAAKC,G,EAAK;AAAA;;AACzB,eAASO,IAAT,CAAcC,EAAd,EAAkB;AAAA;AAAA;;AAChB,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIZ,UAAUa,MAA9B,EAAsCD,KAAK,CAA3C,EAA8C;AAAA;;AAC5C,cAAIZ,UAAUY,CAAV,EAAaD,EAAb,KAAoBA,EAAxB,EAA4B;AAAA;AAAA;;AAC1B,mBAAOC,CAAP;AACD,WAFD;AAAA;AAAA;AAGD;AALe;AAMhB,eAAO,CAAC,CAAR;AACD;;AARwB,2CAYrBV,IAAIG,IAZiB;AAAA,UAWvBM,EAXuB,SAWvBA,EAXuB;AAAA,UAWnBU,IAXmB,SAWnBA,IAXmB;AAAA,UAWbC,KAXa,SAWbA,KAXa;AAAA,UAWNC,UAXM,SAWNA,UAXM;AAAA,UAWMC,MAXN,SAWMA,MAXN;;AAazB,UAAMC,oCAAWf,KAAKC,EAAL,CAAX,CAAN;AAbyB;AAczB,UAAIc,WAAW,CAAC,CAAhB,EAAmB;AAAA;AAAA;;AACjB,aAAK,IAAIb,IAAI,CAAb,EAAgBA,IAAIZ,UAAUa,MAA9B,EAAsCD,KAAK,CAA3C,EAA8C;AAAA;;AAC5C,cAAIZ,UAAUY,CAAV,EAAaD,EAAb,KAAoBS,OAAOT,EAAP,CAAxB,EAAoC;AAAA;AAAA;;AAClCX,sBAAUY,CAAV,EAAaD,EAAb,GAAkBA,EAAlB;AADkC;AAElCX,sBAAUY,CAAV,EAAaS,IAAb,GAAoBA,IAApB;AAFkC;AAGlCrB,sBAAUY,CAAV,EAAaU,KAAb,GAAqBA,KAArB;AAHkC;AAIlCtB,sBAAUY,CAAV,EAAaW,UAAb,GAA0BA,UAA1B;AAJkC;AAKlCvB,sBAAUY,CAAV,EAAaY,MAAb,GAAsBA,MAAtB;AALkC;AAMlC,mBAAOrB,IAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,0BAAY,IADc;AAE1BC,6BAAe,SAFW;AAG1BQ,oBAAMjB,UAAUY,CAAV;AAHoB,aAArB,CAAP;AAKD,WAXD;AAAA;AAAA;AAYD;AACF,OAfD;AAAA;AAAA;;AAdyB;AA+BzB,aAAOT,IAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,oBAAY,IADc;AAE1BC,uBAAe;AAFW,OAArB,CAAP;AAID;;;;;;kBAGYR,c","file":"userController.js","sourceRoot":"/home/tomiwatech/Desktop/projects/Andela/bootCamp/Maintenance-Tracker/server/controllers","sourcesContent":["const dataStore = [];\nclass UserController {\n  static create(req, res) {\n    dataStore.push(req.body);\n    return res.status(201).json({\n      statusCode: '00',\n      statusMessage: 'New request created successfully'\n    });\n  }\n\n  static deleteOne(req, res) {\n    function find(id) {\n      for (let i = 0; i < dataStore.length; i += 1) {\n        if (dataStore[i].id === id) {\n          return i;\n        }\n      }\n      return -1;\n    }\n    const { id } = req.params;\n    const foundAt = find(id);\n    if (foundAt > -1) {\n      dataStore.splice(foundAt, 1);\n      return res.status(200).json({\n        statusCode: '00',\n        statusMessage: 'User Deleted',\n        data: dataStore\n      });\n    }\n    return res.status(400).json({\n      responseCode: '01',\n      responseMessage: 'User Could not be deleted. ID not found'\n    });\n  }\n\n  static findById(req, res) {\n    const { id } = req.params;\n    for (let i = 0; i < dataStore.length; i += 1) {\n      if (dataStore[i].id === Number(id)) {\n        return res.status(200).json({\n          statusCode: '00',\n          statusMessage: 'User found',\n          data: dataStore[i]\n        });\n      }\n    }\n\n    return res.status(400).json({\n      responseCode: '01',\n      responseMessage: 'User not found'\n    });\n  }\n\n  static getAll(req, res) {\n    return res.status(200).json({\n      statusCode: '00',\n      statusMessage: 'Successfully fetched all users requests',\n      data: dataStore\n    });\n  }\n\n  static deleteAll(req, res) {\n    dataStore.length = 0;\n    return res.status(200).json({\n      statusCode: '00',\n      statusMessage: 'Data Source Emptied Successfully',\n      data: dataStore\n    });\n  }\n\n  static updateOne(req, res) {\n    function find(id) {\n      for (let i = 0; i < dataStore.length; i += 1) {\n        if (dataStore[i].id === id) {\n          return i;\n        }\n      }\n      return -1;\n    }\n\n    const {\n      id, name, model, desciption, defect\n    } = req.body;\n    const foundOne = find(id);\n    if (foundOne > -1) {\n      for (let i = 0; i < dataStore.length; i += 1) {\n        if (dataStore[i].id === Number(id)) {\n          dataStore[i].id = id;\n          dataStore[i].name = name;\n          dataStore[i].model = model;\n          dataStore[i].desciption = desciption;\n          dataStore[i].defect = defect;\n          return res.status(200).json({\n            statusCode: '00',\n            statusMessage: 'Updated',\n            data: dataStore[i]\n          });\n        }\n      }\n    }\n\n    return res.status(400).json({\n      statusCode: '00',\n      statusMessage: 'User with id not found'\n    });\n  }\n}\n\nexport default UserController;\n"]}