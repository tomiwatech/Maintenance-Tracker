'use strict';

var cov_2814qlnx18 = function () {
  var path = '/home/tomiwatech/Desktop/projects/Andela/bootCamp/Maintenance-Tracker/server/controllers/userController.js',
      hash = 'fe2de5c55f6c7282f9c9731bb88a2f03114bc262',
      Function = function () {}.constructor,
      global = new Function('return this')(),
      gcv = '__coverage__',
      coverageData = {
    path: '/home/tomiwatech/Desktop/projects/Andela/bootCamp/Maintenance-Tracker/server/controllers/userController.js',
    statementMap: {
      '0': {
        start: {
          line: 1,
          column: 18
        },
        end: {
          line: 1,
          column: 20
        }
      },
      '1': {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 4,
          column: 29
        }
      },
      '2': {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 8,
          column: 7
        }
      },
      '3': {
        start: {
          line: 13,
          column: 6
        },
        end: {
          line: 17,
          column: 7
        }
      },
      '4': {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 16,
          column: 9
        }
      },
      '5': {
        start: {
          line: 15,
          column: 10
        },
        end: {
          line: 15,
          column: 19
        }
      },
      '6': {
        start: {
          line: 18,
          column: 6
        },
        end: {
          line: 18,
          column: 16
        }
      },
      '7': {
        start: {
          line: 20,
          column: 19
        },
        end: {
          line: 20,
          column: 29
        }
      },
      '8': {
        start: {
          line: 21,
          column: 20
        },
        end: {
          line: 21,
          column: 28
        }
      },
      '9': {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      '10': {
        start: {
          line: 23,
          column: 6
        },
        end: {
          line: 23,
          column: 35
        }
      },
      '11': {
        start: {
          line: 24,
          column: 6
        },
        end: {
          line: 28,
          column: 9
        }
      },
      '12': {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 33,
          column: 7
        }
      },
      '13': {
        start: {
          line: 37,
          column: 19
        },
        end: {
          line: 37,
          column: 29
        }
      },
      '14': {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      '15': {
        start: {
          line: 39,
          column: 6
        },
        end: {
          line: 45,
          column: 7
        }
      },
      '16': {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 44,
          column: 11
        }
      },
      '17': {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 51,
          column: 7
        }
      },
      '18': {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 59,
          column: 7
        }
      },
      '19': {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 63,
          column: 25
        }
      },
      '20': {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 68,
          column: 7
        }
      },
      '21': {
        start: {
          line: 73,
          column: 6
        },
        end: {
          line: 77,
          column: 7
        }
      },
      '22': {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      '23': {
        start: {
          line: 75,
          column: 10
        },
        end: {
          line: 75,
          column: 19
        }
      },
      '24': {
        start: {
          line: 78,
          column: 6
        },
        end: {
          line: 78,
          column: 16
        }
      },
      '25': {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 16
        }
      },
      '26': {
        start: {
          line: 84,
          column: 21
        },
        end: {
          line: 84,
          column: 29
        }
      },
      '27': {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 100,
          column: 5
        }
      },
      '28': {
        start: {
          line: 86,
          column: 6
        },
        end: {
          line: 99,
          column: 7
        }
      },
      '29': {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 98,
          column: 9
        }
      },
      '30': {
        start: {
          line: 88,
          column: 10
        },
        end: {
          line: 88,
          column: 31
        }
      },
      '31': {
        start: {
          line: 89,
          column: 10
        },
        end: {
          line: 89,
          column: 35
        }
      },
      '32': {
        start: {
          line: 90,
          column: 10
        },
        end: {
          line: 90,
          column: 37
        }
      },
      '33': {
        start: {
          line: 91,
          column: 10
        },
        end: {
          line: 91,
          column: 47
        }
      },
      '34': {
        start: {
          line: 92,
          column: 10
        },
        end: {
          line: 92,
          column: 39
        }
      },
      '35': {
        start: {
          line: 93,
          column: 10
        },
        end: {
          line: 97,
          column: 13
        }
      },
      '36': {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 105,
          column: 7
        }
      }
    },
    fnMap: {
      '0': {
        name: '(anonymous_0)',
        decl: {
          start: {
            line: 3,
            column: 2
          },
          end: {
            line: 3,
            column: 3
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 9,
            column: 3
          }
        },
        line: 3
      },
      '1': {
        name: '(anonymous_1)',
        decl: {
          start: {
            line: 11,
            column: 2
          },
          end: {
            line: 11,
            column: 3
          }
        },
        loc: {
          start: {
            line: 11,
            column: 29
          },
          end: {
            line: 34,
            column: 3
          }
        },
        line: 11
      },
      '2': {
        name: 'find',
        decl: {
          start: {
            line: 12,
            column: 13
          },
          end: {
            line: 12,
            column: 17
          }
        },
        loc: {
          start: {
            line: 12,
            column: 22
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 12
      },
      '3': {
        name: '(anonymous_3)',
        decl: {
          start: {
            line: 36,
            column: 2
          },
          end: {
            line: 36,
            column: 3
          }
        },
        loc: {
          start: {
            line: 36,
            column: 28
          },
          end: {
            line: 52,
            column: 3
          }
        },
        line: 36
      },
      '4': {
        name: '(anonymous_4)',
        decl: {
          start: {
            line: 54,
            column: 2
          },
          end: {
            line: 54,
            column: 3
          }
        },
        loc: {
          start: {
            line: 54,
            column: 26
          },
          end: {
            line: 60,
            column: 3
          }
        },
        line: 54
      },
      '5': {
        name: '(anonymous_5)',
        decl: {
          start: {
            line: 62,
            column: 2
          },
          end: {
            line: 62,
            column: 3
          }
        },
        loc: {
          start: {
            line: 62,
            column: 29
          },
          end: {
            line: 69,
            column: 3
          }
        },
        line: 62
      },
      '6': {
        name: '(anonymous_6)',
        decl: {
          start: {
            line: 71,
            column: 2
          },
          end: {
            line: 71,
            column: 3
          }
        },
        loc: {
          start: {
            line: 71,
            column: 29
          },
          end: {
            line: 106,
            column: 3
          }
        },
        line: 71
      },
      '7': {
        name: 'find',
        decl: {
          start: {
            line: 72,
            column: 13
          },
          end: {
            line: 72,
            column: 17
          }
        },
        loc: {
          start: {
            line: 72,
            column: 22
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 72
      }
    },
    branchMap: {
      '0': {
        loc: {
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 16,
            column: 9
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 16,
            column: 9
          }
        }, {
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 16,
            column: 9
          }
        }],
        line: 14
      },
      '1': {
        loc: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        }, {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        }],
        line: 22
      },
      '2': {
        loc: {
          start: {
            line: 39,
            column: 6
          },
          end: {
            line: 45,
            column: 7
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 39,
            column: 6
          },
          end: {
            line: 45,
            column: 7
          }
        }, {
          start: {
            line: 39,
            column: 6
          },
          end: {
            line: 45,
            column: 7
          }
        }],
        line: 39
      },
      '3': {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        }, {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        }],
        line: 74
      },
      '4': {
        loc: {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        }, {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        }],
        line: 85
      },
      '5': {
        loc: {
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        }, {
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        }],
        line: 87
      }
    },
    s: {
      '0': 0,
      '1': 0,
      '2': 0,
      '3': 0,
      '4': 0,
      '5': 0,
      '6': 0,
      '7': 0,
      '8': 0,
      '9': 0,
      '10': 0,
      '11': 0,
      '12': 0,
      '13': 0,
      '14': 0,
      '15': 0,
      '16': 0,
      '17': 0,
      '18': 0,
      '19': 0,
      '20': 0,
      '21': 0,
      '22': 0,
      '23': 0,
      '24': 0,
      '25': 0,
      '26': 0,
      '27': 0,
      '28': 0,
      '29': 0,
      '30': 0,
      '31': 0,
      '32': 0,
      '33': 0,
      '34': 0,
      '35': 0,
      '36': 0
    },
    f: {
      '0': 0,
      '1': 0,
      '2': 0,
      '3': 0,
      '4': 0,
      '5': 0,
      '6': 0,
      '7': 0
    },
    b: {
      '0': [0, 0],
      '1': [0, 0],
      '2': [0, 0],
      '3': [0, 0],
      '4': [0, 0],
      '5': [0, 0]
    },
    _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
  },
      coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var dataStore = (cov_2814qlnx18.s[0]++, []);

var UserController = function () {
  function UserController() {
    _classCallCheck(this, UserController);
  }

  _createClass(UserController, null, [{
    key: 'create',
    value: function create(req, res) {
      cov_2814qlnx18.f[0]++;
      cov_2814qlnx18.s[1]++;

      dataStore.push(req.body);
      cov_2814qlnx18.s[2]++;
      return res.status(201).json({
        statusCode: '00',
        statusMessage: 'New request created successfully'
      });
    }
  }, {
    key: 'deleteOne',
    value: function deleteOne(req, res) {
      cov_2814qlnx18.f[1]++;

      function find(id) {
        cov_2814qlnx18.f[2]++;
        cov_2814qlnx18.s[3]++;

        for (var i = 0; i < dataStore.length; i += 1) {
          cov_2814qlnx18.s[4]++;

          if (dataStore[i].id === id) {
            cov_2814qlnx18.b[0][0]++;
            cov_2814qlnx18.s[5]++;

            return i;
          } else {
            cov_2814qlnx18.b[0][1]++;
          }
        }
        cov_2814qlnx18.s[6]++;
        return -1;
      }

      var _ref = (cov_2814qlnx18.s[7]++, req.params),
          id = _ref.id;

      var foundAt = (cov_2814qlnx18.s[8]++, find(id));
      cov_2814qlnx18.s[9]++;
      if (foundAt > -1) {
        cov_2814qlnx18.b[1][0]++;
        cov_2814qlnx18.s[10]++;

        dataStore.splice(foundAt, 1);
        cov_2814qlnx18.s[11]++;
        return res.status(200).json({
          statusCode: '00',
          statusMessage: 'User Deleted',
          data: dataStore
        });
      } else {
        cov_2814qlnx18.b[1][1]++;
      }
      cov_2814qlnx18.s[12]++;
      return res.status(400).json({
        responseCode: '01',
        responseMessage: 'User Could not be deleted. ID not found'
      });
    }
  }, {
    key: 'findById',
    value: function findById(req, res) {
      cov_2814qlnx18.f[3]++;

      var _ref2 = (cov_2814qlnx18.s[13]++, req.params),
          id = _ref2.id;

      cov_2814qlnx18.s[14]++;

      for (var i = 0; i < dataStore.length; i += 1) {
        cov_2814qlnx18.s[15]++;

        if (dataStore[i].id === Number(id)) {
          cov_2814qlnx18.b[2][0]++;
          cov_2814qlnx18.s[16]++;

          return res.status(200).json({
            statusCode: '00',
            statusMessage: 'User found',
            data: dataStore[i]
          });
        } else {
          cov_2814qlnx18.b[2][1]++;
        }
      }

      cov_2814qlnx18.s[17]++;
      return res.status(400).json({
        responseCode: '01',
        responseMessage: 'User not found'
      });
    }
  }, {
    key: 'getAll',
    value: function getAll(req, res) {
      cov_2814qlnx18.f[4]++;
      cov_2814qlnx18.s[18]++;

      return res.status(200).json({
        statusCode: '00',
        statusMessage: 'Successfully fetched all users requests',
        data: dataStore
      });
    }
  }, {
    key: 'deleteAll',
    value: function deleteAll(req, res) {
      cov_2814qlnx18.f[5]++;
      cov_2814qlnx18.s[19]++;

      dataStore.length = 0;
      cov_2814qlnx18.s[20]++;
      return res.status(200).json({
        statusCode: '00',
        statusMessage: 'Data Source Emptied Successfully',
        data: dataStore
      });
    }
  }, {
    key: 'updateOne',
    value: function updateOne(req, res) {
      cov_2814qlnx18.f[6]++;

      function find(id) {
        cov_2814qlnx18.f[7]++;
        cov_2814qlnx18.s[21]++;

        for (var i = 0; i < dataStore.length; i += 1) {
          cov_2814qlnx18.s[22]++;

          if (dataStore[i].id === id) {
            cov_2814qlnx18.b[3][0]++;
            cov_2814qlnx18.s[23]++;

            return i;
          } else {
            cov_2814qlnx18.b[3][1]++;
          }
        }
        cov_2814qlnx18.s[24]++;
        return -1;
      }

      var _ref3 = (cov_2814qlnx18.s[25]++, req.body),
          id = _ref3.id,
          name = _ref3.name,
          model = _ref3.model,
          desciption = _ref3.desciption,
          defect = _ref3.defect;

      var foundOne = (cov_2814qlnx18.s[26]++, find(id));
      cov_2814qlnx18.s[27]++;
      if (foundOne > -1) {
        cov_2814qlnx18.b[4][0]++;
        cov_2814qlnx18.s[28]++;

        for (var i = 0; i < dataStore.length; i += 1) {
          cov_2814qlnx18.s[29]++;

          if (dataStore[i].id === Number(id)) {
            cov_2814qlnx18.b[5][0]++;
            cov_2814qlnx18.s[30]++;

            dataStore[i].id = id;
            cov_2814qlnx18.s[31]++;
            dataStore[i].name = name;
            cov_2814qlnx18.s[32]++;
            dataStore[i].model = model;
            cov_2814qlnx18.s[33]++;
            dataStore[i].desciption = desciption;
            cov_2814qlnx18.s[34]++;
            dataStore[i].defect = defect;
            cov_2814qlnx18.s[35]++;
            return res.status(200).json({
              statusCode: '00',
              statusMessage: 'Updated',
              data: dataStore[i]
            });
          } else {
            cov_2814qlnx18.b[5][1]++;
          }
        }
      } else {
        cov_2814qlnx18.b[4][1]++;
      }

      cov_2814qlnx18.s[36]++;
      return res.status(400).json({
        statusCode: '00',
        statusMessage: 'User with id not found'
      });
    }
  }]);

  return UserController;
}();

exports.default = UserController;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,