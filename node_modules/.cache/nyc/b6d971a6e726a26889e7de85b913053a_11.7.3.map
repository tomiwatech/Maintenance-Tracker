{"version":3,"sources":["user.js"],"names":["chai","use","chaiHttp","should","describe","it","done","request","server","get","end","err","res","have","status","body","property","to","equals","be","an","name","model","description","id","defect","post","send","eql"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEAA,eAAKC,GAAL,CAASC,kBAAT;AACAF,eAAKG,MAAL;;AAEAC,SAAS,kBAAT,EAA6B,YAAM;;AAE/BA,aAAS,uBAAT,EAAkC,YAAM;AACpCC,WAAG,6BAAH,EAAkC,UAACC,IAAD,EAAU;AACxCN,2BAAKO,OAAL,CAAaC,eAAb,EACKC,GADL,CACS,yBADT,EAEKC,GAFL,CAES,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfA,oBAAIT,MAAJ,CAAWU,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAF,oBAAIG,IAAJ,CAASZ,MAAT,CAAgBU,IAAhB,CAAqBG,QAArB,CAA8B,iBAA9B,EAAiDC,EAAjD,CAAoDC,MAApD,CAA2D,yCAA3D;AACAN,oBAAIG,IAAJ,CAASZ,MAAT,CAAgBU,IAAhB,CAAqBG,QAArB,CAA8B,cAA9B,EAA8CC,EAA9C,CAAiDC,MAAjD,CAAwD,IAAxD;AACAN,oBAAIG,IAAJ,CAASZ,MAAT,CAAgBU,IAAhB,CAAqBG,QAArB,CAA8B,MAA9B,EAAsCC,EAAtC,CAAyCE,EAAzC,CAA4CC,EAA5C,CAA+C,OAA/C;AACAd;AACH,aARL;AASH,SAVD;AAWH,KAZD;;AAcA;;;AAGAF,aAAS,eAAT,EAA0B,YAAM;AAC5BC,WAAG,kEAAH,EAAuE,UAACC,IAAD,EAAU;AAC7E,gBAAIC,UAAU;AACVc,sBAAK,OADK;AAEVC,uBAAM,IAFI;AAGVC,6BAAY,cAHF;AAIVC,oBAAG,GAJO;AAKVC,wBAAO;AALG,aAAd;AAOAzB,2BAAKO,OAAL,CAAaC,eAAb,EACKkB,IADL,CACU,yBADV,EAEKC,IAFL,CAEUpB,OAFV,EAGKG,GAHL,CAGS,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfA,oBAAIT,MAAJ,CAAWU,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAF,oBAAIG,IAAJ,CAASZ,MAAT,CAAgBU,IAAhB,CAAqBG,QAArB,CAA8B,iBAA9B,EAAiDY,GAAjD,CAAqD,kCAArD;AACAhB,oBAAIG,IAAJ,CAASZ,MAAT,CAAgBU,IAAhB,CAAqBG,QAArB,CAA8B,cAA9B,EAA8CY,GAA9C,CAAkD,IAAlD;AACAtB;AACH,aARL;AASH,SAjBD;;AAmBAD,WAAG,+DAAH,EAAoE,UAACC,IAAD,EAAU;AAC1E,gBAAIC,UAAU;AACVc,sBAAK,EADK;AAEVC,uBAAM,IAFI;AAGVC,6BAAY,EAHF;AAIVC,oBAAG,GAJO;AAKVC,wBAAO;AALG,aAAd;AAOAzB,2BAAKO,OAAL,CAAaC,eAAb,EACKkB,IADL,CACU,yBADV,EAEKC,IAFL,CAEUpB,OAFV,EAGKG,GAHL,CAGS,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfA,oBAAIT,MAAJ,CAAWU,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAF,oBAAIG,IAAJ,CAASZ,MAAT,CAAgBU,IAAhB,CAAqBG,QAArB,CAA8B,iBAA9B,EAAiDY,GAAjD,CAAqD,wBAArD;AACAhB,oBAAIG,IAAJ,CAASZ,MAAT,CAAgBU,IAAhB,CAAqBG,QAArB,CAA8B,cAA9B,EAA8CY,GAA9C,CAAkD,IAAlD;AACAtB;AACH,aARL;AASH,SAjBD;AAmBH,KAvCD;AAwCH,CA3DD","file":"user.js","sourceRoot":"/home/tomiwatech/Desktop/projects/Andela/bootCamp/Maintenance-Tracker/server/tests/controllers","sourcesContent":["import chai  from 'chai';\nimport chaiHttp from 'chai-http';\nimport server from '../../index';\nimport UserController from '../../controllers/userController';\n\nchai.use(chaiHttp);\nchai.should();\n\ndescribe('Users Controller', () => {\n\n    describe('Get all user requests', () => {\n        it('it should GET all the users', (done) => {\n            chai.request(server)\n                .get('/api/v1/users/requests/')\n                .end((err, res) => {\n                    res.should.have.status(200);\n                    res.body.should.have.property('responseMessage').to.equals('Successfully fetched all users requests');\n                    res.body.should.have.property('responseCode').to.equals('00');\n                    res.body.should.have.property('data').to.be.an('array');\n                    done();\n                });\n        });\n    });\n\n    /*\n    * Test the /POST route\n    */\n    describe('/POST request', () => {\n        it('it should make a post request assuming all fields are not empty ', (done) => {\n            let request = {\n                name:\"final\",\n                model:\"hh\",\n                description:\"Best in town\",\n                id:\"2\",\n                defect:\"Faulty\"\n            }\n            chai.request(server)\n                .post('/api/v1/users/requests/')\n                .send(request)\n                .end((err, res) => {\n                    res.should.have.status(201);\n                    res.body.should.have.property('responseMessage').eql('New request created successfully');\n                    res.body.should.have.property('responseCode').eql('00');\n                    done();\n                });\n        });\n\n        it('it should make a post request assuming some fields are empty ', (done) => {\n            let request = {\n                name:\"\",\n                model:\"hh\",\n                description:\"\",\n                id:\"2\",\n                defect:\"Faulty\"\n            }\n            chai.request(server)\n                .post('/api/v1/users/requests/')\n                .send(request)\n                .end((err, res) => {\n                    res.should.have.status(400);\n                    res.body.should.have.property('responseMessage').eql('Please fill all fields');\n                    res.body.should.have.property('responseCode').eql('01');\n                    done();\n                });\n        });\n\n    });\n});"]}