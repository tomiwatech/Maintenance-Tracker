'use strict';

var cov_atuvatrhz = function () {
  var path = '/home/tomiwatech/Desktop/projects/Andela/bootCamp/Maintenance-Tracker/server/index.js',
      hash = '0d9a8369f4f142a2ad4278b621b7a65634dd69d0',
      Function = function () {}.constructor,
      global = new Function('return this')(),
      gcv = '__coverage__',
      coverageData = {
    path: '/home/tomiwatech/Desktop/projects/Andela/bootCamp/Maintenance-Tracker/server/index.js',
    statementMap: {
      '0': {
        start: {
          line: 6,
          column: 13
        },
        end: {
          line: 6,
          column: 37
        }
      },
      '1': {
        start: {
          line: 7,
          column: 12
        },
        end: {
          line: 7,
          column: 21
        }
      },
      '2': {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 51
        }
      },
      '3': {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 27
        }
      },
      '4': {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 23
        }
      },
      '5': {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 23
        }
      },
      '6': {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 69
        }
      },
      '7': {
        start: {
          line: 14,
          column: 26
        },
        end: {
          line: 14,
          column: 68
        }
      },
      '8': {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      '9': {
        start: {
          line: 16,
          column: 2
        },
        end: {
          line: 21,
          column: 3
        }
      },
      '10': {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 61
        }
      },
      '11': {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 67
        }
      }
    },
    fnMap: {
      '0': {
        name: '(anonymous_0)',
        decl: {
          start: {
            line: 14,
            column: 14
          },
          end: {
            line: 14,
            column: 15
          }
        },
        loc: {
          start: {
            line: 14,
            column: 26
          },
          end: {
            line: 14,
            column: 68
          }
        },
        line: 14
      },
      '1': {
        name: '(anonymous_1)',
        decl: {
          start: {
            line: 15,
            column: 17
          },
          end: {
            line: 15,
            column: 18
          }
        },
        loc: {
          start: {
            line: 15,
            column: 23
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 15
      }
    },
    branchMap: {
      '0': {
        loc: {
          start: {
            line: 6,
            column: 13
          },
          end: {
            line: 6,
            column: 37
          }
        },
        type: 'binary-expr',
        locations: [{
          start: {
            line: 6,
            column: 13
          },
          end: {
            line: 6,
            column: 17
          }
        }, {
          start: {
            line: 6,
            column: 21
          },
          end: {
            line: 6,
            column: 37
          }
        }],
        line: 6
      },
      '1': {
        loc: {
          start: {
            line: 16,
            column: 2
          },
          end: {
            line: 21,
            column: 3
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 16,
            column: 2
          },
          end: {
            line: 21,
            column: 3
          }
        }, {
          start: {
            line: 16,
            column: 2
          },
          end: {
            line: 21,
            column: 3
          }
        }],
        line: 16
      }
    },
    s: {
      '0': 0,
      '1': 0,
      '2': 0,
      '3': 0,
      '4': 0,
      '5': 0,
      '6': 0,
      '7': 0,
      '8': 0,
      '9': 0,
      '10': 0,
      '11': 0
    },
    f: {
      '0': 0,
      '1': 0
    },
    b: {
      '0': [0, 0],
      '1': [0, 0]
    },
    _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
  },
      coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _express = require('express');

var _express2 = _interopRequireDefault(_express);

var _bodyParser = require('body-parser');

var _bodyParser2 = _interopRequireDefault(_bodyParser);

var _morgan = require('morgan');

var _morgan2 = _interopRequireDefault(_morgan);

var _api = require('./api');

var _api2 = _interopRequireDefault(_api);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PORT = (cov_atuvatrhz.s[0]++, (cov_atuvatrhz.b[0][0]++, 5555) || (cov_atuvatrhz.b[0][1]++, process.env.PORT));
var app = (cov_atuvatrhz.s[1]++, (0, _express2.default)());
cov_atuvatrhz.s[2]++;
app.use(_bodyParser2.default.urlencoded({ extended: true }));
cov_atuvatrhz.s[3]++;
app.use(_bodyParser2.default.json());
cov_atuvatrhz.s[4]++;
app.use((0, _morgan2.default)('dev'));

// api versioning;
cov_atuvatrhz.s[5]++;
app.use('/api/v1', _api2.default);
cov_atuvatrhz.s[6]++;
app.get('/*', function (_, res) {
  cov_atuvatrhz.f[0]++;
  cov_atuvatrhz.s[7]++;
  return res.send('Cant find resource').status(400);
});
cov_atuvatrhz.s[8]++;
app.listen(PORT, function () {
  cov_atuvatrhz.f[1]++;
  cov_atuvatrhz.s[9]++;

  if (process.env.NODE_ENV == 'dev') {
    cov_atuvatrhz.b[1][0]++;
    cov_atuvatrhz.s[10]++;

    /* eslint no-console: 0 */
    console.log('The Dev server is running on port ' + PORT);
  } else {
    cov_atuvatrhz.b[1][1]++;
    cov_atuvatrhz.s[11]++;

    console.log('The production server is now running at ' + PORT);
  }
});

exports.default = app;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIlBPUlQiLCJwcm9jZXNzIiwiZW52IiwiYXBwIiwidXNlIiwiYm9keVBhcnNlciIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImpzb24iLCJhcGkiLCJnZXQiLCJfIiwicmVzIiwic2VuZCIsInN0YXR1cyIsImxpc3RlbiIsIk5PREVfRU5WIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7OztBQUVBLElBQU1BLDhCQUFPLDZEQUFRQyxRQUFRQyxHQUFSLENBQVlGLElBQXBCLENBQVAsQ0FBTjtBQUNBLElBQU1HLDZCQUFNLHdCQUFOLENBQU47O0FBQ0FBLElBQUlDLEdBQUosQ0FBUUMscUJBQVdDLFVBQVgsQ0FBc0IsRUFBRUMsVUFBVSxJQUFaLEVBQXRCLENBQVI7O0FBQ0FKLElBQUlDLEdBQUosQ0FBUUMscUJBQVdHLElBQVgsRUFBUjs7QUFDQUwsSUFBSUMsR0FBSixDQUFRLHNCQUFPLEtBQVAsQ0FBUjs7QUFFQTs7QUFDQUQsSUFBSUMsR0FBSixDQUFRLFNBQVIsRUFBbUJLLGFBQW5COztBQUNBTixJQUFJTyxHQUFKLENBQVEsSUFBUixFQUFjLFVBQUNDLENBQUQsRUFBSUMsR0FBSixFQUFZO0FBQUE7QUFBQTtBQUFBLGFBQUlDLElBQUosQ0FBUyxvQkFBVCxFQUErQkMsTUFBL0IsQ0FBc0MsR0FBdEM7QUFBMEMsQ0FBcEU7O0FBQ0FYLElBQUlZLE1BQUosQ0FBV2YsSUFBWCxFQUFpQixZQUFNO0FBQUE7QUFBQTs7QUFDckIsTUFBSUMsUUFBUUMsR0FBUixDQUFZYyxRQUFaLElBQXdCLEtBQTVCLEVBQW1DO0FBQUE7QUFBQTs7QUFDakM7QUFDQUMsWUFBUUMsR0FBUix3Q0FBaURsQixJQUFqRDtBQUNELEdBSEQsTUFHTztBQUFBO0FBQUE7O0FBQ0xpQixZQUFRQyxHQUFSLDhDQUF1RGxCLElBQXZEO0FBQ0Q7QUFDRixDQVBEOztrQkFTZUcsRyIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS90b21pd2F0ZWNoL0Rlc2t0b3AvcHJvamVjdHMvQW5kZWxhL2Jvb3RDYW1wL01haW50ZW5hbmNlLVRyYWNrZXIvc2VydmVyIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcic7XG5pbXBvcnQgbG9nZ2VyIGZyb20gJ21vcmdhbic7XG5pbXBvcnQgYXBpIGZyb20gJy4vYXBpJztcblxuY29uc3QgUE9SVCA9IDU1NTUgfHwgcHJvY2Vzcy5lbnYuUE9SVDtcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpO1xuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5hcHAudXNlKGxvZ2dlcignZGV2JykpO1xuXG4vLyBhcGkgdmVyc2lvbmluZztcbmFwcC51c2UoJy9hcGkvdjEnLCBhcGkpXG5hcHAuZ2V0KCcvKicsIChfLCByZXMpID0+IHJlcy5zZW5kKCdDYW50IGZpbmQgcmVzb3VyY2UnKS5zdGF0dXMoNDAwKSlcbmFwcC5saXN0ZW4oUE9SVCwgKCkgPT4ge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT0gJ2RldicpIHtcbiAgICAvKiBlc2xpbnQgbm8tY29uc29sZTogMCAqL1xuICAgIGNvbnNvbGUubG9nKGBUaGUgRGV2IHNlcnZlciBpcyBydW5uaW5nIG9uIHBvcnQgJHtQT1JUfWApO1xuICB9IGVsc2Uge1xuICAgIGNvbnNvbGUubG9nKGBUaGUgcHJvZHVjdGlvbiBzZXJ2ZXIgaXMgbm93IHJ1bm5pbmcgYXQgJHtQT1JUfWApO1xuICB9XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgYXBwO1xuIl19