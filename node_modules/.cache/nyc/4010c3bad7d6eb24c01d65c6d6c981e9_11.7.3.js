'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var UserMiddlewareValidator = function () {
  function UserMiddlewareValidator() {
    _classCallCheck(this, UserMiddlewareValidator);
  }

  _createClass(UserMiddlewareValidator, null, [{
    key: 'validatePostBody',
    value: function validatePostBody(req, res, next) {
      var _req$body = req.body,
          name = _req$body.name,
          model = _req$body.model,
          description = _req$body.description,
          id = _req$body.id,
          defect = _req$body.defect;

      if (name.trim() === '' || model.trim() === '' || description.trim() === '' || id === '' || defect.trim() === '') {
        return res.status(400).json({
          responseCode: '01',
          responseMessage: 'Please fill all fields'
        });
      }
      next();
    }
  }]);

  return UserMiddlewareValidator;
}();

exports.default = UserMiddlewareValidator;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbIlVzZXJNaWRkbGV3YXJlVmFsaWRhdG9yIiwicmVxIiwicmVzIiwibmV4dCIsImJvZHkiLCJuYW1lIiwibW9kZWwiLCJkZXNjcmlwdGlvbiIsImlkIiwiZGVmZWN0IiwidHJpbSIsInN0YXR1cyIsImpzb24iLCJyZXNwb25zZUNvZGUiLCJyZXNwb25zZU1lc3NhZ2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7SUFBTUEsdUI7Ozs7Ozs7cUNBQ29CQyxHLEVBQUtDLEcsRUFBS0MsSSxFQUFNO0FBQUEsc0JBR2xDRixJQUFJRyxJQUg4QjtBQUFBLFVBRXBDQyxJQUZvQyxhQUVwQ0EsSUFGb0M7QUFBQSxVQUU5QkMsS0FGOEIsYUFFOUJBLEtBRjhCO0FBQUEsVUFFdkJDLFdBRnVCLGFBRXZCQSxXQUZ1QjtBQUFBLFVBRVZDLEVBRlUsYUFFVkEsRUFGVTtBQUFBLFVBRU5DLE1BRk0sYUFFTkEsTUFGTTs7QUFJdEMsVUFBSUosS0FBS0ssSUFBTCxPQUFnQixFQUFoQixJQUFzQkosTUFBTUksSUFBTixPQUFpQixFQUF2QyxJQUE2Q0gsWUFBWUcsSUFBWixPQUF1QixFQUFwRSxJQUEwRUYsT0FBTyxFQUFqRixJQUF1RkMsT0FBT0MsSUFBUCxPQUFrQixFQUE3RyxFQUFpSDtBQUMvRyxlQUFPUixJQUFJUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDMUJDLHdCQUFjLElBRFk7QUFFMUJDLDJCQUFpQjtBQUZTLFNBQXJCLENBQVA7QUFJRDtBQUNEWDtBQUNEOzs7Ozs7a0JBR1lILHVCIiwiZmlsZSI6InVzZXJzLmpzIiwic291cmNlUm9vdCI6Ii9ob21lL3RvbWl3YXRlY2gvRGVza3RvcC9wcm9qZWN0cy9BbmRlbGEvYm9vdENhbXAvTWFpbnRlbmFuY2UtVHJhY2tlci9zZXJ2ZXIvbWlkZGxld2FyZXMvdmFsaWRhdG9ycyIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIFVzZXJNaWRkbGV3YXJlVmFsaWRhdG9yIHtcbiAgc3RhdGljIHZhbGlkYXRlUG9zdEJvZHkocmVxLCByZXMsIG5leHQpIHtcbiAgICBjb25zdCB7XG4gICAgICBuYW1lLCBtb2RlbCwgZGVzY3JpcHRpb24sIGlkLCBkZWZlY3RcbiAgICB9ID0gcmVxLmJvZHk7XG4gICAgaWYgKG5hbWUudHJpbSgpID09PSAnJyB8fCBtb2RlbC50cmltKCkgPT09ICcnIHx8IGRlc2NyaXB0aW9uLnRyaW0oKSA9PT0gJycgfHwgaWQgPT09ICcnIHx8IGRlZmVjdC50cmltKCkgPT09ICcnKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oe1xuICAgICAgICByZXNwb25zZUNvZGU6ICcwMScsXG4gICAgICAgIHJlc3BvbnNlTWVzc2FnZTogJ1BsZWFzZSBmaWxsIGFsbCBmaWVsZHMnXG4gICAgICB9KTtcbiAgICB9XG4gICAgbmV4dCgpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFVzZXJNaWRkbGV3YXJlVmFsaWRhdG9yO1xuIl19