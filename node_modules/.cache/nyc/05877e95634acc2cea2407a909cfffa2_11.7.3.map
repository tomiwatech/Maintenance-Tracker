{"version":3,"sources":["userController.js"],"names":["UserController","req","res","id","body","position","UserhelperClass","findUser","dataStore","status","json","responseCode","responseMessage","push","params","splice","data","length","name","model","desciption","defect"],"mappings":"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","file":"userController.js","sourceRoot":"/home/tomiwatech/Desktop/projects/Andela/bootCamp/Maintenance-Tracker/server/controllers","sourcesContent":["import UserhelperClass from '../helpers/users/user';\nimport dataStore from '../dummy/dummy';\n\nclass UserController {\n  static create(req, res) {\n    const { id } = req.body;\n    const position = UserhelperClass.findUser(dataStore, id);\n    if (position > -1) {\n      return res.status(400).json({\n        responseCode: '01',\n        responseMessage: 'User Already Exists'\n      });\n    }\n    dataStore.push(req.body);\n    return res.status(201).json({\n      responseCode: '00',\n      responseMessage: 'New request created successfully'\n    });\n  }\n\n  static deleteOne(req, res) {\n    const { id } = req.params;\n    const position = UserhelperClass.findUser(dataStore, id);\n    if (position > -1) {\n      dataStore.splice(position, 1);\n      return res.status(200).json({\n        responseCode: '00',\n        responseMessage: 'User Deleted',\n        data: dataStore\n      });\n    }\n    return res.status(400).json({\n      responseCode: '01',\n      responseMessage: 'User Could not be deleted. ID not found'\n    });\n  }\n\n  static findById(req, res) {\n    const { id } = req.params;\n    const position = UserhelperClass.findUser(dataStore, id);\n    if (position > -1) {\n      return res.status(200).json({\n        responseCode: '00',\n        responseMessage: 'User found',\n        data: dataStore[position]\n      });\n    }\n\n    return res.status(400).json({\n      responseCode: '01',\n      responseMessage: 'User not found'\n    });\n  }\n\n  static getAll(req, res) {\n    return res.status(200).json({\n      responseCode: '00',\n      responseMessage: 'Successfully fetched all users requests',\n      data: dataStore\n    });\n  }\n\n  static deleteAll(req, res) {\n    dataStore.length = 0;\n    return res.status(200).json({\n      responseCode: '00',\n      responseMessage: 'Data Source Emptied Successfully',\n      data: dataStore\n    });\n  }\n\n  static updateOne(req, res) {\n    const {\n      name, model, desciption, id, defect\n    } = req.body;\n    const position = UserhelperClass.findUser(dataStore, id);\n    if (position > -1) {\n      dataStore[position].id = id;\n      dataStore[position].name = name;\n      dataStore[position].model = model;\n      dataStore[position].desciption = desciption;\n      dataStore[position].defect = defect;\n      return res.status(200).json({\n        responseCode: '00',\n        responseMessage: 'User details Updated',\n        data: dataStore[position]\n      });\n    }\n    return res.status(400).json({\n      responseCode: '01',\n      responseMessage: 'User with id not found'\n    });\n  }\n}\n\nexport default UserController;\n"]}